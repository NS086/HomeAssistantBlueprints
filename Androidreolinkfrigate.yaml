blueprint:
  name: Reolink Camera Alert with Snapshot, Actions & Snooze (visitor optional)
  description: >
    Sends a snapshot notification on events with buttons to open Frigate or Reolink,
    plus a 6h Snooze. Uses a single rolling snapshot file to avoid buildup.
    Required: a Person sensor. Optional: add any extra event sensors (e.g., doorbell visitor/pressed).
  domain: automation
  input:
    person_sensor:
      name: Person sensor (binary_sensor)
      selector:
        entity:
          domain: binary_sensor
    extra_sensors:
      name: Additional event sensors (optional)
      description: Add doorbell visitor/pressed here; leave empty for cameras.
      default: []
      selector:
        entity:
          domain: binary_sensor
          multiple: true
    camera:
      name: Camera entity
      selector:
        entity:
          domain: camera
    notify_service:
      name: Mobile app notify service (e.g., notify.mobile_app_your_phone)
      selector: { text: {} }
    filename_stem:
      name: Snapshot filename stem (no extension)
      default: "camera"
      selector: { text: {} }
    frigate_url:
      name: Frigate URL (PWA origin)
      default: "https://frigate.local/"
      selector: { text: {} }
    reolink_uid:
      name: Reolink UID
      selector: { text: {} }
    reolink_devname:
      name: Reolink device name
      default: "NVR"
      selector: { text: {} }
    reolink_channel:
      name: Reolink channel number
      default: 1
      selector:
        number:
          min: 1
          max: 32
          step: 1
          mode: box
    snooze_timer:
      name: Snooze timer helper
      description: Alerts are suppressed while this timer is active.
      selector:
        entity:
          domain: timer
    snooze_duration:
      name: Snooze duration
      default: "06:00:00"
      selector: { text: {} }
    queue_max:
      name: Max queued runs
      default: 10
      selector:
        number:
          min: 1
          max: 50
          step: 1
          mode: slider

mode: queued
max: !input queue_max

triggers:
  # Required person trigger
  - id: person
    platform: state
    entity_id: !input person_sensor
    to: "on"

  # Optional “extra sensors” trigger (fires when any listed sensor turns ON).
  # If list is empty, this template stays false and never triggers.
  - id: visitor
    platform: template
    value_template: >-
      {% set ents = expand(!input extra_sensors) %}
      {% if ents | length == 0 %}
        false
      {% else %}
        {{ (ents | selectattr('state','eq','on') | list | length) > 0 }}
      {% endif %}

  # Snooze button action from mobile app notification
  - id: snooze
    platform: event
    event_type: mobile_app_notification_action
    event_data:
      action: SNOOZE_6H

variables:
  snap_rel: "/media/local/reolink/{{ !input filename_stem }}_latest.jpg"
  snap_abs: "/media/reolink/{{ !input filename_stem }}_latest.jpg"
  bust: "{{ (now() | as_timestamp) | int }}"
  frigate_url: !input frigate_url
  reolink_uid: !input reolink_uid
  reolink_devname: !input reolink_devname
  reolink_channel: !input reolink_channel
  notify_service: !input notify_service

conditions: []

actions:
  - choose:
      # --- Snooze button pressed ---
      - conditions:
          - condition: template
            value_template: "{{ trigger.platform == 'event' and trigger.id == 'snooze' }}"
        sequence:
          - service: timer.start
            target:
              entity_id: !input snooze_timer
            data:
              duration: !input snooze_duration
          - service: "{{ notify_service }}"
            data:
              title: "Alerts snoozed"
              message: "Notifications paused for {{ !input snooze_duration }}"

      # --- Person/Visitor event ---
      - conditions:
          - condition: template
            value_template: "{{ trigger.platform in ['state','template'] }}"
        sequence:
          # If snoozed, exit
          - condition: template
            value_template: "{{ states(!input snooze_timer) == 'idle' }}"

          # Take snapshot (overwrite a single file)
          - service: camera.snapshot
            data:
              entity_id: !input camera
              filename: "{{ snap_abs }}"
          - delay: "00:00:01"

          # Titles and ALMTYPE based on which trigger fired
          - variables:
              almtype: "{{ 'PEOPLE' if trigger.id == 'person' else 'VISITOR' }}"
              title: "{{ 'Person' if trigger.id == 'person' else 'Visitor' }}"
              msg: "{{ 'Person detected' if trigger.id == 'person' else 'Doorbell pressed' }}"

          - service: "{{ notify_service }}"
            data:
              title: "{{ title }}"
              message: "{{ msg }}"
              data:
                image: "{{ snap_rel }}?v={{ bust }}"
                clickAction: >-
                  intent://scan/#Intent;scheme=reolink;package=com.mcu.reolink;action=android.intent.action.VIEW;S.UID={{ reolink_uid }};S.DEVNAME={{ reolink_devname }};S.ALMTYPE={{ almtype }};S.ALMCHN={{ reolink_channel }};S.ALMTIME={{ now().isoformat() }};S.ALMNAME=Detection;end
                actions:
                  - action: "URI"
                    title: "Open Frigate"
                    uri: "{{ frigate_url }}"
                  - action: "URI"
                    title: "Open Reolink"
                    uri: >-
                      intent://scan/#Intent;scheme=reolink;package=com.mcu.reolink;action=android.intent.action.VIEW;S.UID={{ reolink_uid }};S.DEVNAME={{ reolink_devname }};S.ALMTYPE={{ almtype }};S.ALMCHN={{ reolink_channel }};S.ALMTIME={{ now().isoformat() }};S.ALMNAME=Detection;end
