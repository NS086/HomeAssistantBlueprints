blueprint:
  name: Reolink Camera Alert (iOS, Snapshot + Silence THIS/ALL)
  description: >
    iOS snapshot notification with buttons:
      • Open URL (optional)
      • Silence THIS (timer)
      • Silence ALL (optional list + this automation).
    Optionally attach a live camera entity (iOS-only). Includes presence/quiet hours/cooldown.
  domain: automation

  input:
    person_sensor:
      name: Person sensor (binary_sensor)
      selector:
        entity:
          domain: binary_sensor

    extra_sensors:
      name: Additional event sensors (optional)
      description: Doorbell/visitor etc. Leave empty if not used.
      default: []
      selector:
        entity:
          multiple: true
          filter:
            domain: [binary_sensor]

    camera:
      name: Camera entity
      selector:
        entity:
          domain: camera

    notify_devices:
      name: iOS devices to notify (mobile_app)
      selector:
        device:
          integration: mobile_app
          multiple: true

    custom_title:
      name: Custom notification title (optional)
      description: Leave blank for empty title.
      default: ""
      selector: { text: {} }

    custom_message:
      name: Custom notification text (optional)
      description: >
        Placeholders: {camera_name}, {event}.
        Blank → "Person detected at {camera_name}".
      default: ""
      selector: { text: {} }

    filename_stem:
      name: Snapshot filename stem (no extension)
      default: "camera"
      selector: { text: {} }

    notification_icon_mdi:
      name: (Optional) Notification icon (mdi)
      description: iOS ignores icons; kept for parity.
      default: "mdi:cctv"
      selector: { icon: {} }

    enable_open_url_button:
      name: Show "Open URL" button
      default: false
      selector: { boolean: {} }

    open_url:
      name: URL to open
      default: ""
      selector: { text: {} }

    open_url_title:
      name: Open URL button label
      default: "Open URL"
      selector: { text: {} }

    show_silence_this_button:
      name: Show "Silence this camera" button
      default: true
      selector: { boolean: {} }

    show_silence_all_button:
      name: Show "Silence ALL selected automations" button
      description: Uses the list below; includes this automation too.
      default: false
      selector: { boolean: {} }

    silence_minutes:
      name: Silence duration (minutes)
      default: 30
      selector:
        number:
          min: 1
          max: 360
          mode: box

    automations_to_silence:
      name: Other automations to silence (optional)
      description: >
        If "Silence ALL" is enabled, these automations (plus this one) will be
        turned off then re-enabled after the delay.
      default: []
      selector:
        entity:
          domain: automation
          multiple: true

    presence_filter_enabled:
      name: Enable presence filter
      default: false
      selector: { boolean: {} }

    presence_entities:
      name: Presence entities (people/device trackers/groups)
      description: Only notify if ALL of these are NOT home.
      default: []
      selector:
        entity:
          multiple: true
          filter:
            domain: [device_tracker, person, group]

    disable_hours:
      name: Quiet hours (0–23, optional)
      description: Suppress notifications during selected hours.
      default: []
      selector:
        select:
          multiple: true
          options:
            - "0"  - "1"  - "2"  - "3"  - "4"  - "5"  - "6"  - "7"  - "8"  - "9"  - "10" - "11"
            - "12" - "13" - "14" - "15" - "16" - "17" - "18" - "19" - "20" - "21" - "22" - "23"

    cooldown_seconds:
      name: Cooldown (seconds, optional)
      description: Minimum time between alerts from this automation.
      default: 0
      selector:
        number:
          min: 0
          max: 86400
          mode: box

    ios_live_view:
      name: Live View Entity – iOS only (Optional)
      description: Attach a live camera view to the notification on iOS.
      default: ""
      selector:
        entity:
          filter:
            domain: [camera]
          multiple: false

    ios_sound_name:
      name: iOS sound name
      description: Use a system sound or a custom imported sound (without extension).
      default: "default"
      selector:
        select:
          options: [default, none]
          custom_value: true

    ios_sound_volume:
      name: iOS sound volume (0–100)
      default: 100
      selector:
        number:
          min: 0
          max: 100
          step: 1
          mode: slider
          unit_of_measurement: "%"

    ios_critical:
      name: iOS critical alert
      description: Overrides silent/DND when allowed in iOS settings.
      default: false
      selector: { boolean: {} }

mode: queued
max: 10

triggers:
  - id: person
    platform: state
    entity_id: !input person_sensor
    to: "on"

  - id: extra
    platform: template
    value_template: >-
      {% set ents = expand(extra_sensors_list) %}
      {% if ents | length == 0 %}
        false
      {% else %}
        {{ (ents | selectattr('state','eq','on') | list | length) > 0 }}
      {% endif %}

  - id: silence_one
    platform: event
    event_type: mobile_app_notification_action
    event_data:
      action: silence-one-{{ this.entity_id }}

  - id: silence_all
    platform: event
    event_type: mobile_app_notification_action
    event_data:
      action: silence-all-{{ this.entity_id }}

variables:
  camera_entity: !input camera
  cam_name: "{{ state_attr(camera_entity, 'friendly_name') or camera_entity }}"
  extra_sensors_list: !input extra_sensors

  notify_device_ids: !input notify_devices
  notify_ids_list: >-
    {{ notify_device_ids if notify_device_ids is iterable else [notify_device_ids] }}

  custom_title_text: !input custom_title
  custom_message_text: !input custom_message

  filename_stem_var: !input filename_stem
  snap_abs: "{{ '/media/reolink/' ~ filename_stem_var ~ '_latest.jpg' }}"
  snap_rel: "{{ '/media/local/reolink/' ~ filename_stem_var ~ '_latest.jpg' }}"
  bust: "{{ (now() | as_timestamp) | int }}"

  notification_icon_mdi_var: !input notification_icon_mdi

  enable_open_url_button_var: !input enable_open_url_button
  open_url_text: !input open_url
  open_url_title_text: !input open_url_title

  show_silence_this_var: !input show_silence_this_button
  show_silence_all_var: !input show_silence_all_button
  silence_minutes_var: !input silence_minutes
  autos_all_list: !input automations_to_silence

  presence_filter_enabled_var: !input presence_filter_enabled
  presence_entities_list: !input presence_entities

  disable_hours_raw: !input disable_hours
  disable_hours_list: "{{ (disable_hours_raw | map('int') | list) if disable_hours_raw is iterable else [] }}"

  cooldown_seconds_var: !input cooldown_seconds

  ios_live_view_entity: !input ios_live_view
  ios_sound_name_var: !input ios_sound_name
  ios_sound_volume_pct: !input ios_sound_volume
  ios_sound_volume_float: "{{ (ios_sound_volume_pct | int(100)) / 100 }}"
  ios_critical_var: !input ios_critical

  action_silence_one: "silence-one-{{ this.entity_id }}"
  action_silence_all: "silence-all-{{ this.entity_id }}"

conditions: []

actions:
  - choose:

      # ---------- Silence THIS ----------
      - conditions:
          - condition: trigger
            id: silence_one
        sequence:
          - action: automation.turn_off
            target:
              entity_id: "{{ this.entity_id }}"
            data:
              stop_actions: false
          - delay:
              minutes: !input silence_minutes
          - action: automation.turn_on
            target:
              entity_id: "{{ this.entity_id }}"

      # ---------- Silence ALL ----------
      - conditions:
          - condition: trigger
            id: silence_all
        sequence:
          - variables:
              all_list: >-
                {{ ([this.entity_id] + (autos_all_list if autos_all_list is iterable else [])) | unique | list }}
          - action: automation.turn_off
            target:
              entity_id: "{{ all_list }}"
            data:
              stop_actions: false
          - delay:
              minutes: !input silence_minutes
          - action: automation.turn_on
            target:
              entity_id: "{{ all_list }}"

      # ---------- Main notification path ----------
      - conditions:
          - condition: template
            value_template: "{{ trigger.id in ['person','extra'] }}"
        sequence:
          # Cooldown
          - condition: template
            value_template: >-
              {{ cooldown_seconds_var == 0
                 or not this.attributes.last_triggered
                 or (now() - this.attributes.last_triggered).total_seconds() > cooldown_seconds_var }}

          # Presence filter
          - condition: template
            value_template: >-
              {% if presence_filter_enabled_var %}
                {{ (expand(presence_entities_list)
                    | selectattr('state','eq','home')
                    | list | length) == 0 }}
              {% else %} true {% endif %}

          # Quiet hours
          - condition: template
            value_template: >-
              {{ (disable_hours_list | length == 0)
                 or (now().hour not in disable_hours_list) }}

          # Snapshot
          - action: camera.snapshot
            data:
              entity_id: !input camera
              filename: "{{ snap_abs }}"
          - delay: "00:00:01"

          - variables:
              title_final: "{{ custom_title_text | trim }}"
              event_text: "{{ 'Person detected' if trigger.id == 'person' else 'Event' }}"
              msg_default: "{{ 'Person detected at ' ~ cam_name }}"
              msg_final: >-
                {% set base = custom_message_text | trim %}
                {% if base == '' %}
                  {{ msg_default }}
                {% else %}
                  {{ base
                     | replace('{camera_name}', cam_name)
                     | replace('{event}', event_text) }}
                {% endif %}
              url_on: "{{ enable_open_url_button_var and (open_url_text | trim) != '' }}"

          # Send per-device — branch WITH or WITHOUT URL action
          - repeat:
              for_each: "{{ notify_ids_list }}"
              sequence:
                - variables:
                    svc_name: "{{ 'notify.mobile_app_' ~ (device_attr(repeat.item,'name') | slugify) }}"

                - choose:
                    - conditions:
                        - condition: template
                          value_template: "{{ url_on }}"
                      sequence:
                        - service: "{{ svc_name }}"
                          data:
                            title: "{{ title_final }}"
                            message: "{{ msg_final }}"
                            data:
                              image: "{{ snap_rel }}?v={{ bust }}"
                              push:
                                sound:
                                  name: "{{ ios_sound_name_var }}"
                                  volume: "{{ 0 if ios_sound_name_var == 'none' else ios_sound_volume_float }}"
                                  critical: "{{ 1 if ios_critical_var else 0 }}"
                              entity_id: "{{ ios_live_view_entity }}"
                              actions:
                                - action: URI
                                  title: "{{ open_url_title_text }}"
                                  uri: "{{ open_url_text }}"
                    - conditions:
                        - condition: template
                          value_template: "{{ not url_on }}"
                      sequence:
                        - service: "{{ svc_name }}"
                          data:
                            title: "{{ title_final }}"
                            message: "{{ msg_final }}"
                            data:
                              image: "{{ snap_rel }}?v={{ bust }}"
                              push:
                                sound:
                                  name: "{{ ios_sound_name_var }}"
                                  volume: "{{ 0 if ios_sound_name_var == 'none' else ios_sound_volume_float }}"
                                  critical: "{{ 1 if ios_critical_var else 0 }}"
                              entity_id: "{{ ios_live_view_entity }}"
    default: []
